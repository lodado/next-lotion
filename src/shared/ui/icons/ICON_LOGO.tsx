'use client'

import react, { Children, cloneElement, isValidElement, memo, ReactNode, SVGProps } from 'react'

import processNode from './processNode'

interface SVGPropsExtended extends SVGProps<SVGSVGElement> {
  fillOverwrite?: string
}

const ICON_LOGO = memo((props: SVGPropsExtended) => {
  const { fillOverwrite, ...rest } = props

  return (
    <>
      {Children.map(
        <svg width="173" height="152" viewBox="0 0 173 152" fill="none" xmlns="http://www.w3.org/2000/svg" {...rest}>
          <g filter="url(#filter0_dd_916_24480)">
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M84.2617 116.517C118.762 116.517 146.73 95.312 146.73 69.1549C146.73 42.9977 118.762 21.7931 84.2617 21.7931C49.7612 21.7931 21.7931 42.9977 21.7931 69.1549C21.7931 83.9013 30.6822 97.0736 44.6194 105.76C45.479 106.296 45.7961 107.404 45.3194 108.298L37.2602 123.409C36.4249 124.975 38.0195 126.723 39.6554 126.034L66.1897 114.862C66.5494 114.71 66.9471 114.675 67.3288 114.756C72.7138 115.903 78.3932 116.517 84.2617 116.517Z"
              fill="white"
            />
            <path
              fillRule="evenodd"
              clipRule="evenodd"
              d="M42.3679 38.6699C31.7795 46.6978 25.564 57.5118 25.564 69.1549C25.564 82.2705 33.47 94.368 46.6139 102.56C49.097 104.107 50.0901 107.366 48.6466 110.072L43.0864 120.498L64.7264 111.386C65.8101 110.93 66.9936 110.829 68.1144 111.068C73.2395 112.16 78.6556 112.746 84.2617 112.746C100.765 112.746 115.564 107.67 126.155 99.6399C136.744 91.612 142.959 80.798 142.959 69.1549C142.959 57.5118 136.744 46.6978 126.155 38.6699C115.564 30.6401 100.765 25.564 84.2617 25.564C67.7581 25.564 52.9589 30.6401 42.3679 38.6699ZM37.8116 32.6602C49.8297 23.5484 66.2648 18.0223 84.2617 18.0223C102.258 18.0223 118.694 23.5484 130.712 32.6602C142.732 41.774 150.501 54.6408 150.501 69.1549C150.501 83.6689 142.732 96.5358 130.712 105.65C118.694 114.761 102.258 120.288 84.2617 120.288C78.3373 120.288 72.5885 119.689 67.1145 118.564L41.1187 129.509C36.2108 131.576 31.427 126.333 33.933 121.635L41.1853 108.037C27.2546 98.8385 18.0223 84.9927 18.0223 69.1549C18.0223 54.6408 25.7909 41.774 37.8116 32.6602Z"
              fill="#F7F7F7"
            />
            <path
              d="M62.0378 67.5189L61.4604 69.219C64.0907 70.6946 65.2455 72.8438 65.2455 75.1854C65.2134 79.0668 62.9038 81.7613 56.8091 82.884C56.0714 83.0123 55.5261 82.7236 55.3336 82.0179C55.1411 81.3122 55.3657 80.7027 56.0714 80.414C59.1508 79.1951 60.2735 77.6233 60.2735 74.9609C60.2735 74.3514 60.1131 73.774 59.7923 73.2608C58.9904 74.8646 58.1243 76.244 57.1299 77.3667C55.8468 78.7781 54.4996 79.9008 52.8957 80.6386L52.9599 81.1839C53.0882 82.5311 52.4787 83.1085 50.5541 83.2689C48.6294 83.4293 48.1162 82.9802 47.9879 81.6009C43.1121 81.6971 40.1931 79.7404 40.1289 76.0515C40.0648 72.9721 41.8932 70.021 46.4161 68.2888C46.7048 68.1925 46.9935 68.0642 47.3142 67.968C47.2822 66.5887 47.2822 65.1773 47.3142 63.7659C45.7745 63.7979 44.2669 63.7979 42.6951 63.7979C41.9252 63.7979 41.5403 63.1885 41.5403 62.162C41.5403 61.1355 41.9894 60.5902 42.7593 60.5902C44.2669 60.6223 45.8066 60.6223 47.3463 60.5581C47.3463 60.1411 47.3463 59.692 47.3784 59.243C47.4105 58.3127 46.8652 57.7353 45.967 57.4146C45.4538 57.2221 45.2292 56.8051 45.3575 56.1635C45.4858 55.4899 45.8708 55.2012 46.3519 55.2974C47.6992 55.6182 48.9502 55.7465 50.1691 55.8107C50.7786 55.8428 51.5164 55.8748 52.1579 55.8748C52.5749 55.8748 52.8316 56.1315 52.7995 56.5485C52.7032 57.8316 52.6391 59.0826 52.5749 60.2694C55.2694 60.0449 57.8677 59.692 60.3056 59.2109C61.0434 59.0505 61.6208 59.4675 61.7811 60.5261C61.9415 61.5525 61.6528 62.1941 60.883 62.3545C58.0281 62.9319 55.2374 63.2847 52.4466 63.4772C52.3825 64.7603 52.3825 65.9792 52.3504 67.1661C53.4089 67.1661 54.4996 67.2623 55.5902 67.3906C56.0714 67.4548 56.5204 67.551 56.9695 67.6472C57.0658 66.8774 56.8733 66.3641 56.4884 65.9792C56.1034 65.5943 56.1355 65.081 56.5525 64.5999C56.9695 64.1187 57.4507 64.0546 57.8356 64.3433C58.9583 65.1773 60.3056 66.0754 61.6849 66.5245C62.0698 66.6528 62.1981 67.0057 62.0378 67.5189ZM52.3504 70.3417C52.3825 72.4268 52.4466 74.4476 52.5749 76.5006C53.4089 75.7628 54.0826 74.8646 54.692 73.8702C55.2694 72.8758 55.7827 71.7852 56.1676 70.7267C55.6544 70.5984 55.109 70.47 54.5637 70.4059C53.7618 70.3417 53.024 70.3097 52.3504 70.3417ZM47.6992 78.1686C47.5709 75.9873 47.4426 73.9023 47.3784 71.7852C45.8387 72.7796 45.1009 74.2872 45.2292 75.6345C45.3254 77.078 46.2236 78.0082 47.6992 78.1686Z"
              fill="#FFB904"
            />
            <path
              d="M88.3645 81.7534L86.4697 76.069H76.7544L74.5496 82.408C74.274 83.2004 73.4127 83.4415 72.2758 83.1315C71.1045 82.8214 70.6911 82.029 71.0011 81.1677L79.6139 56.8108C79.8206 56.2252 80.0962 56.0184 80.8886 56.0184H84.8505C85.505 56.0184 85.7806 56.1907 86.0218 56.8108L94.29 79.6174C94.8413 81.0988 93.98 82.3735 92.3952 82.9937C90.8794 83.5793 88.9157 83.4071 88.3645 81.7534ZM81.7154 61.8407L77.8913 72.7961H85.3672L81.7154 61.8407Z"
              fill="#944DE7"
            />
            <path
              d="M119.29 83.2999C117.602 83.2999 116.842 82.7653 116.842 81.6681V58.5425C116.842 58.1768 117.039 57.9799 117.405 57.9799H121.175C121.541 57.9799 121.738 58.1768 121.738 58.5425V66.8137H124.692C125.367 66.8137 125.704 67.3201 125.704 68.2204C125.704 69.1207 125.367 69.6271 124.692 69.6271H121.738V81.6681C121.738 82.7653 120.978 83.2999 119.29 83.2999ZM107.558 61.7216H101.763C101.088 61.7216 100.75 61.1871 100.75 60.2868C100.75 59.3865 101.088 58.8239 101.763 58.852C103.451 58.9364 105.195 58.9927 106.546 58.9927C107.896 58.9927 109.443 58.9083 110.794 58.852C113.382 58.7395 114.592 59.7804 114.395 62.9313C113.973 69.4864 109.331 75.7601 102.41 79.53C100.778 80.4021 99.3153 78.2921 100.609 77.1949C105.505 73.1156 108.515 67.7984 108.909 63.1283C108.993 62.0029 108.684 61.7216 107.558 61.7216Z"
              fill="#555555"
            />
          </g>
          <defs>
            <filter
              id="filter0_dd_916_24480"
              x="0"
              y="0"
              width="172.528"
              height="152"
              filterUnits="userSpaceOnUse"
              colorInterpolationFilters="sRGB"
            >
              <feFlood floodOpacity="0" result="BackgroundImageFix" />
              <feColorMatrix
                in="SourceAlpha"
                type="matrix"
                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                result="hardAlpha"
              />
              <feOffset dx="2" dy="2" />
              <feGaussianBlur stdDeviation="5" />
              <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.04 0" />
              <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow_916_24480" />
              <feColorMatrix
                in="SourceAlpha"
                type="matrix"
                values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
                result="hardAlpha"
              />
              <feOffset dx="2" dy="2" />
              <feGaussianBlur stdDeviation="10" />
              <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.06 0" />
              <feBlend mode="normal" in2="effect1_dropShadow_916_24480" result="effect2_dropShadow_916_24480" />
              <feBlend mode="normal" in="SourceGraphic" in2="effect2_dropShadow_916_24480" result="shape" />
            </filter>
          </defs>
        </svg>,
        (child) => processNode(child, fillOverwrite),
      )}
    </>
  )
})

export default ICON_LOGO
